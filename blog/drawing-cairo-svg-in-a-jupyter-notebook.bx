<?xml version='1.0' encoding='utf-8'?>
<blog>
<entry when='20190127T160108'>
<title>Drawing Cairo SVG in a Jupyter notebook</title>
<category>graphics</category>
<category>jupyter</category>
<body>

<p><b>Update:</b> <a pref="blog/cairo-in-jupyter-better.bx"/> is better.</p>

<p>Quick tip: if you want to draw figures using Cairo in a Jupyter notebook,
here's how to do it, at least this was how I did it:
</p>

<code lang="python"><![CDATA[
from io import BytesIO

import cairo
import IPython.display

svgio = BytesIO()
with cairo.SVGSurface(svgio, 200, 200) as surface:
    # These lines are copied verbatim from the
    # pycairo page: https://pycairo.readthedocs.io
    context = cairo.Context(surface)
    x, y, x1, y1 = 0.1, 0.5, 0.4, 0.9
    x2, y2, x3, y3 = 0.6, 0.1, 0.9, 0.5
    context.scale(200, 200)
    context.set_line_width(0.04)
    context.move_to(x, y)
    context.curve_to(x1, y1, x2, y2, x3, y3)
    context.stroke()
    context.set_source_rgba(1, 0.2, 0.2, 0.6)
    context.set_line_width(0.02)
    context.move_to(x, y)
    context.line_to(x1, y1)
    context.move_to(x2, y2)
    context.line_to(x3, y3)
    context.stroke()
    # end of pycairo copy
IPython.display.SVG(data=svgio.getvalue())
]]></code>


</body>
</entry>
</blog>
